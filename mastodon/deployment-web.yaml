---
# Source: mastodon/templates/deployment-web.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mastodon-web
  labels:
    app.kubernetes.io/name: mastodon
    app.kubernetes.io/instance: mastodon
    app.kubernetes.io/version: "v4.2.7"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mastodon
      app.kubernetes.io/instance: mastodon
      app.kubernetes.io/component: web
      app.kubernetes.io/part-of: rails
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mastodon
        app.kubernetes.io/instance: mastodon
        app.kubernetes.io/component: web
        app.kubernetes.io/part-of: rails
    spec:
      serviceAccountName: mastodon
      securityContext:
        fsGroup: 991
        runAsGroup: 991
        runAsUser: 991
      volumes:
        - name: assets
          persistentVolumeClaim:
            claimName: mastodon-assets
        - name: system
          persistentVolumeClaim:
            claimName: mastodon-system
        - name: masto-nginx-config
          configMap:
            name: masto-nginx-config-prd
      containers:
        - name: mastodon-web
          image: "ghcr.io/mastodon/mastodon:v4.2.7"
          imagePullPolicy: IfNotPresent
          command:
            - bundle
            - exec
            - puma
            - -C
            - config/puma.rb
          envFrom:
            - configMapRef:
                name: mastodon-env
            - secretRef:
                name: mastodon
          env:
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: mastodon-postgresql
                  key: password
            - name: "REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: mastodon-redis
                  key: redis-password
            - name: "PORT"
              value: "3000"
          volumeMounts:
            - name: assets
              mountPath: /opt/mastodon/public/assets
            - name: system
              mountPath: /opt/mastodon/public/system
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: http
          readinessProbe:
            httpGet:
              path: /health
              port: http
          startupProbe:
            httpGet:
              path: /health
              port: http
            failureThreshold: 60
            periodSeconds: 5
        - name: mastodon-nginx
          image: nginx:alpine
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 80
          volumeMounts:
            - name: masto-nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf