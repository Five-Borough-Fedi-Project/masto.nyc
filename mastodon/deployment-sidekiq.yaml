---
# Source: mastodon/templates/deployment-sidekiq.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mastodon-sidekiq-all-queues
  labels:
    app.kubernetes.io/name: mastodon
    app.kubernetes.io/instance: mastodon
    app.kubernetes.io/version: "v4.2.6"
    app.kubernetes.io/component: sidekiq-all-queues
    app.kubernetes.io/part-of: rails
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mastodon
      app.kubernetes.io/instance: mastodon
      app.kubernetes.io/component: sidekiq-all-queues
      app.kubernetes.io/part-of: rails
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mastodon
        app.kubernetes.io/instance: mastodon
        app.kubernetes.io/component: sidekiq-all-queues
        app.kubernetes.io/part-of: rails
    spec:
      serviceAccountName: mastodon
      securityContext:
        fsGroup: 991
        runAsGroup: 991
        runAsUser: 991
      volumes:
        - name: assets
          persistentVolumeClaim:
            claimName: mastodon-assets
        - name: system
          persistentVolumeClaim:
            claimName: mastodon-system
      containers:
        - name: mastodon
          securityContext:
            {}
          image: "ghcr.io/mastodon/mastodon:v4.2.6"
          imagePullPolicy: IfNotPresent
          command:
            - bundle
            - exec
            - sidekiq
            - -c
            - "25"
            - -q
            - "default,8"
            - -q
            - "push,6"
            - -q
            - "ingress,4"
            - -q
            - "mailers,2"
            - -q
            - "pull"
            - -q
            - "scheduler"
          envFrom:
            - configMapRef:
                name: mastodon-env
            - secretRef:
                name: mastodon
          env:
            - name: "DB_PASS"
              valueFrom:
                secretKeyRef:
                  name: mastodon-postgresql
                  key: password
            - name: "REDIS_PASSWORD"
              valueFrom:
                secretKeyRef:
                  name: mastodon-redis
                  key: redis-password
          volumeMounts:
            - name: assets
              mountPath: /opt/mastodon/public/assets
            - name: system
              mountPath: /opt/mastodon/public/system
          resources:
            {}
